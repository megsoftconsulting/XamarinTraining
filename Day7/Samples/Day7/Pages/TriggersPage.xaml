<?xml version="1.0" encoding="UTF-8"?>
<ContentPage
    Title="Triggers" xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:viewmodel="clr-namespace:Day7.ViewModels;assembly=Day7"
    xmlns:helpers="clr-namespace:Day7.Helpers;assembly=Day7"
    x:Class="Day7.Pages.TriggersPage">
    <ContentPage.BindingContext>
        <viewmodel:TriggersViewModel />
    </ContentPage.BindingContext>
    <ContentPage.Content>
        <ScrollView>
            <StackLayout Spacing="10" Padding="20">
                <Label Text="Property Triggers" FontSize="Subtitle" FontAttributes="Bold" />
                <Label Text="Property triggers are used to change a property in an element according to a condition from another property"
                       />
                <Label Text="In the following sample, a Backrgound Color property changed when the Text property from a Entry is equal to an specific string value (in this case: Xamarin)" />

                <Entry Placeholder="Insert your name" BackgroundColor="BlueViolet">
                    <Entry.Triggers>
                        <Trigger TargetType="Entry" Property="Text" Value="Xamarin">
                            <Setter Property="BackgroundColor" Value="Green" />
                        </Trigger>
                    </Entry.Triggers>
                </Entry>

                <Label Text="Data Triggers" FontSize="Subtitle" FontAttributes="Bold" />
                <Label Text="They are similar to property triggers except that instead of specify a property within the element, It can be bound to a Binding Property." />
                <Label Text="This allow us to bind the trigger to properties between controls or ViewModels/Models"
                       />
                <Label Text="Sample 1: The field Last Name will only be available if the First Name contains information" />
                <Entry Placeholder="First Name" x:Name="NameEntry" Text="" />
                <Entry Placeholder="Your last name">
                    <Entry.Triggers>
                        <DataTrigger TargetType="Entry"
                                     Binding="{Binding Source={x:Reference NameEntry},
                                     Path=Text.Length}"
                                     Value="0">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Entry.Triggers>
                </Entry>
                <Label Text="Sample 2: The field name (which is bound to this page's ViewModel), will display a label when the Name property contains a value" />
                <Entry Placeholder="Name" Text="{Binding Name}" />
                <Label Text="{Binding Name, StringFormat='Good morning {0}'}">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding Name}" Value="">
                            <Setter Property="IsVisible" Value="False" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <Label Text="Event Triggers" FontSize="Subtitle" FontAttributes="Bold" />
                <Label Text="Event Triggers are executed when a event from a element triggers. For example: We can make a button to have a animation when the user clicks a button." />
                <Button Text="Click me!" BackgroundColor="Gray" TextColor="White">
                    <Button.Triggers>
                        <EventTrigger Event="Clicked">
                            <helpers:ExpandButtonTriggerAction />
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
                <Label Text="Multi Triggers" FontSize="Subtitle" FontAttributes="Bold" />
                <Label Text="This is the advance version of Data Triggers. We can bind multiple conditions to execute an action. For example: enable a button when the user inserts a specific username (Xamarin) and password (1234)"
                    />
                <Entry x:Name="EmailEntry" Placeholder="Insert a username" Text="" />
                <Entry x:Name="PasswordEntry" Placeholder="Insert your password" IsPassword="True" Text="" />
                <Button IsEnabled="False" Text="Click me!" BackgroundColor="Gray" TextColor="White">
                    <Button.Triggers>
                        <MultiTrigger TargetType="Button">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding Source={x:Reference EmailEntry}, Path=Text}" Value="Xamarin" />
                                <BindingCondition Binding="{Binding Source={x:Reference PasswordEntry}, Path=Text}" Value="1234" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True" />
                        </MultiTrigger>
                        <!--Let's add a Event Trigger to the clicked event. In this way, We can combine different triggers to a control -->
                        <!--
                        <EventTrigger Event="Clicked">
                            <helpers:ExpandButtonTriggerAction />
                        </EventTrigger>-->
                    </Button.Triggers>
                </Button>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>
